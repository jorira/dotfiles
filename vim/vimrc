"====================================
" Base Setting
"====================================
set noswapfile              " no swap file
set nocompatible            " vi非互換
set cursorline              " カーソルライン
set number                  " 行番号
set laststatus=2            "0,1,2) ステータスラインを常に表示
set autoindent              "自動インデント有効
set shiftwidth=2            "自動インデントのスペース数
set tabstop=2               "タブのスペース数
set expandtab               "タブキーをスペースに置き換え
syntax on                   "シンタックスハイライト
set backupdir=~/.vim/tmp     " バックアップファイル格納先

"===================================================
" NeoBundle Starting
"---------------------------------------------------
filetype off          " for NeoBundle
if has('vim_starting')
  set rtp+=$HOME/.vim/bundle/neobundle.vim/
endif
call neobundle#begin(expand('$HOME/.vim/bundle'))
NeoBundleFetch 'Shougo/neobundle.vim'

"===================================================
" Plugins by NeoBundle
"===================================================

"--- ユーティリティ---
NeoBundle 'vim-scripts/Colour-Sampler-Pack' "カラースキーマのパック
NeoBundle 'scrooloose/nerdtree'     " NERD-tree ディレクトリツリー
NeoBundle 'Shougo/unite.vim'        " インクリメントファイルサーチ
NeoBundle 'Shougo/neomru.vim'       " 最近使ったファイル
NeoBundle 'itchyny/lightline.vim'   " ステータスバーをハイライト
NeoBundle 'tomtom/tcomment_vim'     " Comment out plugin

if has('lua') && (( v:version == 703 && has('patch885')) || (v:version >= 704))
  NeoBundle 'Shougo/neocomplete'
else
  NeoBundle 'Shougo/neocomplcache'
endif

NeoBundle 'Shougo/neosnippet'       " スニペット
NeoBundle 'Shougo/neosnippet-snippets' " スニペット
NeoBundle 'tpope/vim-surround'      " テキストの範囲操作拡張 di'とか

"---言語: 全般 ---
NeoBundle 'scrooloose/syntastic'    " 構文エラー検知
NeoBundle 'tpope/vim-endwise.git'   " Rubyとかのdef-endの補完
NeoBundle 'kana/vim-smartinput'     " C系の{}の補完


"---言語: Ruby ---
NeoBundle 'vim-ruby/vim-ruby'       " Ruby便利系全部いり 

"-- 言語: Javascript --
NeoBundle 'pangloss/vim-javascript' "javascript 全部いり


"-- マークアップ系 --
NeoBundle 'othree/html5.vim'       " html5 補完
NeoBundle 'mattn/emmet-vim'        " Emmet
NeoBundle 'hail2u/vim-css3-syntax' " css3 シンタックス


" -- Ruby on Rails系 --
NeoBundle 'taichouchou2/vim-rails'  " Rails用の便利系
NeoBundle 'romanvbabenko/rails.vim' " vim-railsの拡張 Rfactoryとか
NeoBundle 'basyura/unite-rails'     " UniteのRails拡張番

"===============================
"NeoBundle Closing 
"-------------------------------
call neobundle#end()
filetype plugin indent on
"===============================


"===============================
" Neocomplete setting
"===============================
if has('lua') && (( v:version == 703 && has('patch885')) || (v:version >= 704))
  "---------------------------------------------------------------
  " Vim 7.4以上且つLuaモジュールが有効な場合はNeocompleteを使う
  "---------------------------------------------------------------
  """ Disable AutoComplPop.
  "let g:acp_enableAtStartup = 0
  "" Use neocomplete.有効化
  let g:neocomplete#enable_at_startup = 1
  "" Use smartcase.
  let g:neocomplete#enable_smart_case = 1
  "" Set minimum syntax keyword length.
  let g:neocomplete#sources#syntax#min_keyword_length = 3
  "let g:neocomplete#lock_buffer_name_pattern = '\*ku\*'
  "
  "" 辞書のパス
  "let g:neocomplete#sources#dictionary#dictionaries = {
  "    \ 'default' : '',
  "    \ 'vimshell' : $HOME.'/.vimshell_hist',
  "    \ 'scheme' : $HOME.'/.gosh_completions'
  "        \ }
  "
  " Filetype別の曖昧補完の関数指定
  autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
  autocmd FileType html,markdown setlocal omnifunc=htmlcomplete#CompleteTags
  autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
  autocmd FileType python setlocal omnifunc=pythoncomplete#Complete
  autocmd FileType xml setlocal omnifunc=xmlcomplete#CompleteTags
else
  "--------------------------------------------------
  "Vim 7.3以下は neocomplcacheを使う
  "--------------------------------------------------
  "  neocomplcacheの設定
  let g:neocomplcache_force_overwrite_completefunc=1
  let g:neocomplcache_enable_at_startup = 1
  if !exists('g:neocomplcache_omni_patterns')
    let g:neocomplcache_omni_patterns = {}
  endif
  let g:neocomplcache_omni_patterns.ruby = '[^. *\t]\.\w*\|\h\w*::'

endif

"==================================
" Unite
"==================================
let g:unite_enable_start_insert=1
let g:unite_source_history_yank_enable =1
let g:unite_source_file_mru_limit = 200


"==============================
" KeyMap 
"===============================
" insertモードでhjkl移動を利用する
imap <c-h> <Left>
imap <c-j> <Down>
imap <c-k> <Up>
imap <c-l> <Right>
" NERDTree
nmap <F9> :NERDTree<Enter>
nmap <F10> :NERDTreeClose<Enter>
" Unite
nnoremap <silent> :uy :<C-u>Unite history/yank<CR>
nnoremap <silent> :ub :<C-u>Unite buffer<CR>
nnoremap <silent> :uf :<C-u>Unite file<CR>
nnoremap <silent> :ur :<C-u>Unite -buffer-name=register register<CR>
nnoremap <silent> :uu :<C-u>Unite file_mru buffer<CR>
"================================
" workspace
"==============================="
let $workspace_path = '/var/workspace'
command! Cdworks cd $workspace_path

"================================
" カラーテーマ
"================================
colorscheme desertEx "要256色, Colour-Sampler-Pack


